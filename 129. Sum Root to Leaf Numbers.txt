/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int ans=0;
    public int sumNumbers(TreeNode root) {
        if(root==null){
            return 0;
        }
        if(root.left!=null){
            sumNumbers(root.left,root.val);
        }
        if(root.right!=null){
            sumNumbers(root.right,root.val);
        }
        if(root.left==null && root.right==null){
            return root.val;
        }
        return ans;
    }
    
    private void sumNumbers(TreeNode root,int curSum){
        if(root.left!=null){
            sumNumbers(root.left,curSum*10+root.val);
        }
        if(root.right!=null){
            sumNumbers(root.right,curSum*10+root.val);
        }
        if(root.left==null && root.right==null){
            ans+=curSum*10+root.val;
        }
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for Sum Root to Leaf Numbers.
Memory Usage: 34.8 MB, less than 100.00% of Java online submissions for Sum Root to Leaf Numbers.

Better than first round.