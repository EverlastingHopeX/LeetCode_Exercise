class Solution {
    public boolean canJump(int[] nums) {
        int range=nums[0];
        int idx=0;
        int max=nums[0];
        for(int i=1;i<range+1 && i<nums.length;i++){
            if(nums[i]+i>max){
                max=nums[i]+i;
                idx=i;
            }
        }
        return jump(nums,idx);
    }
    
    private boolean jump(int[] nums, int idx){
        // System.out.println("jump to "+idx);
        int range=nums[idx]+idx;
        if(range>=nums.length-1){
            return true;
        }
        int max=0;
        int t=idx;
        for(int i=idx+1;i<=range && i< nums.length;i++){
            if(nums[i]+i>max){
                max=nums[i]+i;
                t=i;
            }
        }
        // System.out.println("next: "+t);
        if(t==idx){
            return false;
        }
        return jump(nums, t);
    }
}

Runtime: 3 ms, faster than 34.98% of Java online submissions for Jump Game.
Memory Usage: 41.3 MB, less than 39.74% of Java online submissions for Jump Game.