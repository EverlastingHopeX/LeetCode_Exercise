class Solution {
    public int[] assignBikes(int[][] workers, int[][] bikes) {
        int[][] dist=new int [workers.length][bikes.length];
        for(int i=0;i<workers.length;i++){
            for(int j=0;j<bikes.length;j++){
                dist[i][j]=Math.abs(workers[i][0]-bikes[j][0])+Math.abs(workers[i][1]-bikes[j][1]);
            }
        }
        // System.out.println("initialzed");
        boolean[] wTaken=new boolean[workers.length];
        boolean[] bTaken=new boolean[bikes.length];
        int[] res=new int[workers.length];
        while(true){
            int min=2000;
            int w=-1;
            int b=-1;
            for(int i=0;i<workers.length;i++){
                if(wTaken[i]){
                    continue;
                }
                for(int j=0;j<bikes.length;j++){
                    if(bTaken[j]){
                       continue; 
                    }
                    if(dist[i][j]<min){
                        min=dist[i][j];
                        w=i;
                        b=j;
                    }
                }
            }
            // System.out.println(w+":"+b);
            if(w==-1){
                break;
            }
            res[w]=b;
            wTaken[w]=true;
            bTaken[b]=true;
        }
        return res;
    }
}

Runtime: 348 ms, faster than 70.95% of Java online submissions for Campus Bikes.
Memory Usage: 57.2 MB, less than 100.00% of Java online submissions for Campus Bikes.