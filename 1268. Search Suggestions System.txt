class Solution {
    public List<List<String>> suggestedProducts(String[] products, String searchWord) {
        List<String> curList=new LinkedList<String>();
        for(String str:products){
            curList.add(str);
        }
        Collections.sort(curList,(o1,o2)->(o1.compareTo(o2)));
        List<List<String>> ans=new LinkedList<>();
        for(int i=0;i<searchWord.length();i++){
            char ch=searchWord.charAt(i);
            ListIterator<String> it=curList.listIterator();
            while(it.hasNext()){
                String str=it.next();
                if(i>=str.length() || str.charAt(i)!=ch){
                    it.remove();
                }
            }
            if(curList.size()>3){
                ans.add(new LinkedList<String>(curList.subList(0,3)));
            }
            else{
                ans.add(new LinkedList<String>(curList));
            }
        }
        return ans;
    }
}

Runtime: 15 ms, faster than 82.47% of Java online submissions for Search Suggestions System.
Memory Usage: 51 MB, less than 100.00% of Java online submissions for Search Suggestions System.
