class Solution {
    public int hIndex(int[] citations) {
        Arrays.sort(citations);
        int N=citations.length;
        for(int i=0;i<citations.length;i++){
            int h=N-i;
            // System.out.println("h "+h);
            if(citations[i]<h){
                // System.out.println("too large");
                continue;
            }
            if(i==0 || citations[i-1]<=h){
                return h;
            }
        }
        return 0;
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for H-Index.
Memory Usage: 37 MB, less than 94.87% of Java online submissions for H-Index.

After reading the article of binary search, the first idea I got is to use binary search for this problem. But there is no monotonicity in the search space, so I need to try all possible h one by one.