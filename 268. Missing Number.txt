class Solution {
    public int missingNumber(int[] nums) {
        int t=-1;
        int j=-1;
        for(int i=0;i<nums.length;i++){
            while(nums[i]!=i){
                if(nums[i]==nums.length){
                    break;
                }
                j=nums[i];
                t=nums[i];
                nums[i]=nums[j];
                nums[j]=t;
            }
        }
        for(int i=0;i<nums.length;i++){
            if(nums[i]!=i){
                return i;
            }
        }
        return nums.length;
    }
}

Runtime: 2 ms, faster than 30.78% of Java online submissions for Missing Number.
Memory Usage: 48.2 MB, less than 15.18% of Java online submissions for Missing Number.

Application of bucket sort.
Other methods like bit manipulate and sum are also very interesting and brilliant.
https://leetcode.com/problems/missing-number/discuss/69791/4-Line-Simple-Java-Bit-Manipulate-Solution-with-Explaination