class MaxStack {
    class Node{
        Node prev;
        Node next;
        int val;
        
        Node(){
            prev=null;
            next=null;
            val=-1;
        }
        
        Node(int v){
            prev=null;
            next=null;
            val=v;
        }
        
    }
    
    Node root;
    Node max;
    /** initialize your data structure here. */
    public MaxStack() {
        root=new Node();
        max=null;
    }
    
    public void push(int x) {
        // System.out.println("push "+x);
        Node nxt=root.next;
        Node cur=new Node(x);
        root.next=cur;
        cur.prev=root;
        cur.next=nxt;
        if(nxt!=null){
            nxt.prev=cur;
        }
        if(max==null || cur.val>=max.val){
            // System.out.println("max");
            max=cur;
        }
    }
    
    public int pop() {
        // System.out.println("pop");
        int ans=root.next.val;
        removeNext(root);
        
        return ans;
    }
    
    public int top() {
        // System.out.println("top "+root.next.val);
        return root.next.val;
    }
    
    public int peekMax() {
        // System.out.println("peekMax "+max.val);
        return max.val;
    }
    
    public int popMax() {
        // System.out.println("popMax "+max.val);
        int ans=max.val;
        removeNext(max.prev);
        max=null;
        findMax();
        return ans;
    }
    
    private void findMax(){
        Node cur=root.next;
        while(cur!=null){
            if(max==null || cur.val>max.val){
                max=cur;
            }
            cur=cur.next;
        }
    }
    
    private void removeNext(Node prev){
        Node target=prev.next;
        // System.out.println("remove "+target.val);
        prev.next=target.next;
        if(target.next!=null){
            target.next.prev=prev;
        }
        if(max==target){
            max=null;
            findMax();
        }
    }
}

/**
 * Your MaxStack object will be instantiated and called as such:
 * MaxStack obj = new MaxStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.peekMax();
 * int param_5 = obj.popMax();
 */

Runtime: 16 ms, faster than 73.33% of Java online submissions for Max Stack.
Memory Usage: 40.1 MB, less than 6.93% of Java online submissions for Max Stack.