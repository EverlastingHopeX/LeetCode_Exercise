/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode fst=l1;
        ListNode snd=l2;
        ListNode dummy=new ListNode(0);
        ListNode cur=dummy;
        int add=0;
        while(fst!=null && snd!=null){
            int sum=fst.val+snd.val+add;
            add=0;
            if(sum>9){
                add=1;
                sum-=10;
            }
            fst=fst.next;
            snd=snd.next;
            cur.next=new ListNode(sum);
            cur=cur.next;
        }
        ListNode tail=fst==null?snd:fst;
        while(tail!=null){
            int sum=tail.val+add;
            add=0;
            if(sum>9){
                add=1;
                sum-=10;
            }
            tail=tail.next;
            cur.next=new ListNode(sum);
            cur=cur.next;
        }
        if(add!=0){
            cur.next=new ListNode(1);
        }
        return dummy.next;
    }
}

Runtime: 2 ms, faster than 80.04% of Java online submissions for Add Two Numbers.
Memory Usage: 44.2 MB, less than 86.83% of Java online submissions for Add Two Numbers.