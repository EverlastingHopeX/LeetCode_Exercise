class Solution {
    public String convertToTitle(int n) {
        StringBuilder sb=new StringBuilder("");
        while(n>0){
            int a=n/26;
            int b=n-26*a-1;
            if(b==-1){
                b=25;
                a--;
            }
            char ch=(char)('A'+b);
            sb.append(ch);
            n=a;
        }
        return sb.reverse().toString();
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for Excel Sheet Column Title.
Memory Usage: 39.2 MB, less than 5.09% of Java online submissions for Excel Sheet Column Title.

The code looks simple, but the mechanism of this number conversion is different from what I am used to, the decimal numbers.