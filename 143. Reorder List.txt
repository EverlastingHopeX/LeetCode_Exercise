/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        if(head==null || head.next==null){
            return;
        }
        int n=0;
        ListNode cur=head;
        while(cur!=null){
            n++;
            cur=cur.next;
        }
        ListNode mid=head;
        for(int i=0;i<n/2;i++){
            mid=mid.next;
        }
        ListNode back=mid.next;
        mid.next=null;
        ListNode prev=mid;
        while(back!=null){
            ListNode t=back.next;
            back.next=prev;
            prev=back;
            back=t;
        }
        cur=head;
        back=prev;
        while(back.next!=null){
            ListNode t1=cur.next;
            ListNode t2=back.next;
            cur.next=back;
            back.next=t1;
            cur=t1;
            back=t2;
        }
    }
}

Runtime: 1 ms, faster than 100.00% of Java online submissions for Reorder List.
Memory Usage: 39.3 MB, less than 100.00% of Java online submissions for Reorder List.