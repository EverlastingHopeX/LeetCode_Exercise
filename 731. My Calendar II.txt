Didn't work it out. Completed based on other's solution.

class MyCalendarTwo {
    private List<int[]> books=new LinkedList<int[]>();
    private List<int[]> overlaps=new LinkedList<int[]>();
    public MyCalendarTwo() {
        
    }
    
    public boolean book(int start, int end) {
        // System.out.println(start+"-"+end);
        for(int[] b:books){
            if(Math.max(b[0],start)<Math.min(b[1],end)){
                // System.out.println("    "+b[0]+"-"+b[1]);
                // System.out.println("one");
                if(isOverlapped(Math.max(b[0],start),Math.min(b[1],end))){
                   return false; 
                };
            }
        }
        books.add(new int[]{start,end});
        return true;
    }
    
    private boolean isOverlapped(int start, int end){
        for(int[] o:overlaps){
            if(Math.max(o[0],start)<Math.min(o[1],end)){
                overlaps.clear();
                // System.out.println("    "+o[0]+"-"+o[1]);
                // System.out.println("two");
                return true;
            }
        }
        // System.out.println("add o:"+start+"-"+end);
        overlaps.add(new int[]{start,end});
        return false;
    }
}

/**
 * Your MyCalendarTwo object will be instantiated and called as such:
 * MyCalendarTwo obj = new MyCalendarTwo();
 * boolean param_1 = obj.book(start,end);
 */

Runtime: 164 ms, faster than 54.98% of Java online submissions for My Calendar II.
Memory Usage: 52.5 MB, less than 40.00% of Java online submissions for My Calendar II.

Other's solution.
https://leetcode.com/problems/my-calendar-ii/discuss/109519/JavaC%2B%2B-Clean-Code-with-Explanation