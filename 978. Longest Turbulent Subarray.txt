class Solution {
    public int maxTurbulenceSize(int[] A) {
        if(A==null || A.length==0){
            return 0;
        }
        int max=1;
        int inc=0,des=0;
        int p=1;
        int next=0;
        while(p<A.length){
            //des
            if(A[p]<A[p-1]){
                if(next==1){
                    inc=0;
                    des=0;
                }
                des++;
                next=1;
            }
            //inc
            else if(A[p]>A[p-1]){
                if(next==-1){
                    inc=0;
                    des=0;
                }
                inc++;
                next=-1;
            }
            else{
                inc=0;
                des=0;
                next=0;
            }
            // System.out.println(p+": "+inc+" "+des);
            max=Math.max(max,inc+des+1);
            p++;
        }
        return max;
    }
}

Runtime: 4 ms, faster than 93.17% of Java online submissions for Longest Turbulent Subarray.
Memory Usage: 43.1 MB, less than 63.35% of Java online submissions for Longest Turbulent Subarray.