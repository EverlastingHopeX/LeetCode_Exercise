/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode upsideDownBinaryTree(TreeNode root) {
        TreeNode cur=root, prev=null;
        TreeNode lNode=null, rNode=null;
        while(cur!=null){
            lNode=cur.left;
            cur.left=rNode;
            rNode=cur.right;
            cur.right=prev;
            prev=cur;
            cur=lNode;
        }
        return prev;
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for Binary Tree Upside Down.
Memory Usage: 37.3 MB, less than 66.67% of Java online submissions for Binary Tree Upside Down.

A easy problem with an unclear description.

Other's clarification of the problem.
https://leetcode.com/problems/binary-tree-upside-down/discuss/468607/Clarification-of-the-problem-description