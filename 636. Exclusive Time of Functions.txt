class Solution {
    public int[] exclusiveTime(int n, List<String> logs) {
        int[] ans=new int[n];
        Stack<String[]> st=new Stack<>();
        for(String log:logs){
            String[] cur=log.split(":");
            if(cur[1].equals("end")){
                // System.out.println("end");
                String[] start=st.pop();
                int idx=Integer.parseInt(cur[0]);
                int time=Integer.parseInt(cur[2])-Integer.parseInt(start[2])+1;
                // System.out.println(idx+" + "+time);
                ans[idx]+=time;
                if(!st.isEmpty()){
                    String[] pp=st.peek();
                    idx=Integer.parseInt(pp[0]);
                    // System.out.println(idx+" - "+time);
                    ans[idx]-=time;
                }
            }
            else{
                // System.out.println("start");
                st.push(cur);
            }
        }
        return ans;
    }
}

Runtime: 31 ms, faster than 7.86% of Java online submissions for Exclusive Time of Functions.
Memory Usage: 48.8 MB, less than 16.81% of Java online submissions for Exclusive Time of Functions.

Simulating the function stack.