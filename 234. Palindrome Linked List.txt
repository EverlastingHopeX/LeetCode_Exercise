/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        int n=0;
        ListNode cur=head;
        while(cur!=null){
            cur=cur.next;
            n++;
        }
        ListNode prev=null;
        cur=head;
        for(int i=0;i<n/2;i++){
            ListNode t=cur.next;
            cur.next=prev;
            prev=cur;
            cur=t;
        }
        if(n%2!=0){
            cur=cur.next;
        }
        while(cur!=null){
            if(cur.val!=prev.val){
                return false;
            }
            cur=cur.next;
            prev=prev.next;
        }
        return true;
    }
}

Runtime: 1 ms, faster than 99.09% of Java online submissions for Palindrome Linked List.
Memory Usage: 39.7 MB, less than 98.78% of Java online submissions for Palindrome Linked List.