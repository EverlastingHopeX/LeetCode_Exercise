class Solution {
    public String getPermutation(int n, int k) {
        int[] cnt=new int[n];
        cnt[0]=1;
        for(int i=1;i<n;i++){
            cnt[i]=cnt[i-1]*i;
        }
        StringBuilder sb=new StringBuilder("");
        List<Integer> li=new LinkedList<>();
        for(int i=1;i<=n;i++){
            li.add(i);
        }
        k--;
        for(int i=n-1;i>=0;i--){
            int idx=k/cnt[i];
            k-=idx*cnt[i];
            // System.out.println("idx "+idx);
            // System.out.println(li.get(idx));
            sb.append(li.get(idx));
            li.remove(idx);
        }
        return sb.toString();
    }
}

Runtime: 1 ms, faster than 100.00% of Java online submissions for Permutation Sequence.
Memory Usage: 35 MB, less than 100.00% of Java online submissions for Permutation Sequence.