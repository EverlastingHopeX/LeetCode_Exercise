class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        if(image[sr][sc]!=newColor)
            BFS(image,sr,sc,image[sr][sc],newColor);
        return image;
    }
    
    private void BFS(int[][] image, int r, int c, int oldColor, int newColor){
        // System.out.println(r+" "+c);
        if(r<0 || r>=image.length || c<0 || c>=image[0].length || image[r][c] !=oldColor){
            return;
        }
        image[r][c]=newColor;
        BFS(image,r-1,c,oldColor,newColor);
        BFS(image,r+1,c,oldColor,newColor);
        BFS(image,r,c-1,oldColor,newColor);
        BFS(image,r,c+1,oldColor,newColor);
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for Flood Fill.
Memory Usage: 46.8 MB, less than 31.58% of Java online submissions for Flood Fill.
