class Solution {
    public void wiggleSort(int[] nums) {
        int[] ans=new int[nums.length];
        Arrays.sort(nums);
        int p1=(nums.length-1)/2;
        int p2=nums.length-1;
        for(int i=0;i<nums.length;i+=2){
            ans[i]=nums[p1];
            if(i+1<nums.length){
                ans[i+1]=nums[p2];
            }
            p1--;
            p2--;
        }
        for(int i=0;i<nums.length;i++){
            nums[i]=ans[i];
        }
    }
}

Runtime: 3 ms, faster than 100.00% of Java online submissions for Wiggle Sort II.
Memory Usage: 41.7 MB, less than 100.00% of Java online submissions for Wiggle Sort II.

It is important to start from the bigger side. As the smallest num of
larger nums and the largets num of smaller nums won't be close to each other
even when there is only 4 nums.