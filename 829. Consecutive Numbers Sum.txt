class Solution {
    public int consecutiveNumbersSum(int N) {
        int k=2;
        int cnt=1;
        boolean isOdd=false;
        while(k<=N){
            int t=N/k;
            if(isOdd){
                if(t-k/2<=0){
                    break;
                }
                if(t*k==N){
                    cnt++;
                }
            }
            else{
                if(t-k/2<=-1){
                    break;
                }
                int tt=t*2+1;
                if(tt*k/2==N){
                    cnt++;
                }
            }
            isOdd=!isOdd;
            k++;
        }
        return cnt;
    }
}

Runtime: 6 ms, faster than 38.67% of Java online submissions for Consecutive Numbers Sum.
Memory Usage: 36 MB, less than 88.09% of Java online submissions for Consecutive Numbers Sum.

Other's faster solution.
https://leetcode.com/problems/consecutive-numbers-sum/discuss/128947/JavaC%2B%2BPython-Fastest-Count-Odd-Factors-O(logN)